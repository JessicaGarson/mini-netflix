{"remainingRequest":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/babel-loader/lib/index.js!/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/jessicagarson/Documents/netflix-clone/mini-netflix/src/App.vue","dependencies":[{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/src/App.vue","mtime":1522259981896},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/package.json","mtime":1522260942449},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1522252861433},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/@babel/runtime/helpers/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport VideoPlayer from './components/VideoPlayer.vue';\nimport VideoList from './components/VideoList.vue';\nimport UploadModal from './components/UploadModal.vue';\nvar miniflixService = 'https://miniflix.cloudinary.auth0-extend.com/server/movies';\nexport default {\n  data: function data() {\n    return {\n      movie: {},\n      movies: [],\n      showModal: false,\n      url: miniflixService\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.cloudinaryInstance = window.cloudinary.Cloudinary.new({\n      cloud_name: 'christekh',\n      secure: true\n    });\n    axios.get(this.url).then(function (res) {\n      _this.movies = res.data;\n    });\n  },\n  methods: {\n    updatePlayer: function updatePlayer(movie) {\n      this.movie = movie;\n    },\n    uploadToServer: function uploadToServer(data) {\n      var _this2 = this;\n\n      axios.post(this.url, data).then(function (res) {\n        _this2.movies = _toConsumableArray(_this2.movies).concat([res.data]);\n        _this2.showModal = false;\n      });\n    }\n  },\n  components: {\n    VideoPlayer: VideoPlayer,\n    VideoList: VideoList,\n    UploadModal: UploadModal\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;wBAEA;;aAEA;cACA;iBACA;WACA,AACA;AALA;AAMA;;AACA;;;kBAEA;cACA,AACA;AAHA;mBAIA,yBACA;yBACA;AACA;AACA;;+CAEA;mBACA;AACA;;AACA;;qDACA;sEACA;2BACA;AACA;AACA,AACA;AAVA;;AAYA;AACA;AACA,AACA;AAJA;AA9BA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <nav class=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n      <div class=\"container\">\n        <div class=\"navbar-brand\">\n          <a class=\"navbar-item\" href=\"/\">\n            <img src=\"https://cloudinary-res.cloudinary.com/image/upload/v1521663307/MiniFlix-Logo_620x180.png\" alt=\"Netflix\" width=\"112\" height=\"28\">\n          </a>\n\n           <div class=\"navbar-menu\">\n            <div class=\"navbar-end\">\n              <a class=\"button navbar-item\" @click=\"showModal = !showModal\">\n                Upload\n              </a>\n              <a class=\"button navbar-item\">\n                <social-sharing\n                  title=\"Build a Mini Netflix from scratch\"\n                  url=\"https://cloudinary.gitbooks.io/build-a-mini-netflix-clone-with-vue/content\" inline-template>\n                  <div>\n                    <network network=\"twitter\">\n                      Share\n                    </network>\n                  </div>\n                </social-sharing>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <VideoPlayer :cloudinaryInstance=\"cloudinaryInstance\" :movie=\"movie\"></VideoPlayer>\n\n    <div class=\"container\">\n      <h2 class=\"is-size-3\">Movies</h2>\n      <VideoList :cloudinaryInstance=\"cloudinaryInstance\" @choose-movie=\"updatePlayer\" :movies=\"movies\"></VideoList>\n    </div>\n    <UploadModal :showModal=\"showModal\" @handle-upload=\"uploadToServer\"></UploadModal>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport VideoPlayer from './components/VideoPlayer.vue';\nimport VideoList from './components/VideoList.vue';\nimport UploadModal from './components/UploadModal.vue';\nconst miniflixService = 'https://miniflix.cloudinary.auth0-extend.com/server/movies';\nexport default {\n  data() {\n    return {\n      movie: {},\n      movies: [],\n      showModal: false,\n      url: miniflixService\n    }\n  },\n  created() {\n    this.cloudinaryInstance = window.cloudinary.Cloudinary.new({\n      cloud_name: 'christekh',\n      secure: true\n    });\n    axios.get(this.url)\n      .then(res => {\n        this.movies = res.data;\n      })\n  },\n  methods: {\n    updatePlayer(movie) {\n      this.movie = movie;\n    },\n    uploadToServer(data) {\n      axios.post(this.url, data).then(res => {\n        this.movies = [...this.movies, res.data];\n        this.showModal = false;\n      })\n    }\n  },\n  components: {\n    VideoPlayer,\n    VideoList,\n    UploadModal\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #e5e5e5;\n  background-color: #000;\n  padding-top: 30px;\n}\n.navbar {\n  background-color: transparent;\n  z-index: 2;\n  padding: 30px 0;\n}\n.navbar-item {\n  height: 25px;\n  width: auto;\n  margin-right: 10px;\n}\n</style>\n"]}]}