{"remainingRequest":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/babel-loader/lib/index.js!/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/jessicagarson/Documents/netflix-clone/mini-netflix/src/components/UploadModal.vue","dependencies":[{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/src/components/UploadModal.vue","mtime":1522258742825},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/package.json","mtime":1522260942449},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/cache-loader/dist/cjs.js","mtime":1522252861433},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/jessicagarson/Documents/netflix-clone/mini-netflix/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { SweetModal, SweetModalTab } from 'sweet-modal-vue';\nexport default {\n  data: function data() {\n    return {\n      banner: '',\n      trailer: '',\n      title: ''\n    };\n  },\n  props: ['showModal'],\n  watch: {\n    showModal: function showModal(val) {\n      val ? this.$refs.modal.open() : this.$refs.modal.close();\n    }\n  },\n  methods: {\n    startUpload: function startUpload(type) {\n      var _this = this;\n\n      window.cloudinary.openUploadWidget({\n        cloud_name: 'christekh',\n        upload_preset: 'idcidr0h'\n      }, function (error, result) {\n        console.log(error, result[0]);\n        type === 'banner' ? _this.banner = result[0].public_id : _this.trailer = result[0].public_id;\n      });\n    },\n    handleUpload: function handleUpload() {\n      var data = {\n        title: this.title,\n        banner: this.banner,\n        trailer: this.trailer\n      };\n      if (data.title && this.banner && this.trailer) this.$emit('handle-upload', data);\n    }\n  },\n  components: {\n    SweetModal: SweetModal,\n    SweetModalTab: SweetModalTab\n  }\n};",{"version":3,"sources":["UploadModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;wBAEA;;cAEA;eACA;aACA,AACA;AAJA;AAKA;UACA;;uCAEA;uDACA;AACA,AACA;AAJA;;;AAMA;;wBACA;;uBACA;kCACA;kCACA;iBACA,oCACA,sCACA;AACA,AACA;AACA;0CACA;;oBAEA;qBACA;sBACA,AACA;AAJA;4CAKA,qCACA;AACA,AACA;AArBA;;AAuBA;AACA,AACA;AAHA;AApCA","file":"UploadModal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <sweet-modal modal-theme=\"dark\" overlay-theme=\"dark\" ref=\"modal\">\n    <form @submit.prevent=\"handleUpload()\" class=\"has-text-left\">\n      <div class=\"field\">\n        <label class=\"label has-text-white\">Name</label>\n        <div class=\"control\">\n          <input class=\"input\" type=\"text\" placeholder=\"Text input\" v-model=\"title\">\n        </div>\n      </div>\n      <div class=\"field\">\n        <label class=\"label has-text-white\">Upload Banner</label>\n        <button class=\"button\" @click=\"startUpload('banner')\">Upload</button>\n        <span class=\"has-text-white\">{{banner}}</span>\n      </div>\n      <div class=\"field\">\n        <label class=\"label has-text-white\">Upload Video</label>\n        <button class=\"button\" @click=\"startUpload('trailer')\">Upload</button>\n        <span class=\"has-text-white\">{{trailer}}</span>\n      </div>\n      <button class=\"button is-danger\">Submit</button>\n    </form>\n  </sweet-modal>\n</template>\n\n<script>\nimport { SweetModal, SweetModalTab } from 'sweet-modal-vue';\nexport default {\n  data() {\n    return {\n      banner: '',\n      trailer: '',\n      title: ''\n    };\n  },\n  props: ['showModal'],\n  watch: {\n    showModal(val) {\n      val ? this.$refs.modal.open() : this.$refs.modal.close();\n    }\n  },\n  methods: {\n    startUpload(type) {\n      window.cloudinary.openUploadWidget(\n        { cloud_name: 'christekh', upload_preset: 'idcidr0h' },\n        (error, result) => {\n          console.log(error, result[0]);\n          type === 'banner'\n            ? (this.banner = result[0].public_id)\n            : (this.trailer = result[0].public_id);\n        }\n      );\n    },\n    handleUpload() {\n      const data = {\n        title: this.title,\n        banner: this.banner,\n        trailer: this.trailer\n      };\n      if (data.title && this.banner && this.trailer)\n        this.$emit('handle-upload', data);\n    }\n  },\n  components: {\n    SweetModal,\n    SweetModalTab\n  }\n};\n</script>\n"]}]}